<?xml version="1.0" encoding="UTF-8"?>
<BehaviorTree xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../MetaData/schema_ai.xsd" m_ContextType="ai">
    <SequenceMem>
        <Cnd_UVReactionDisabled m_Invert="true"/>
        <Selector>
            <!-- Run away if target is still in light -->
            <SetFlagOnRunning m_Key="#running_away_from_light">
                <SequenceMem>
                    <Cnd_IsInUVLight m_Invert="true"/>
                    <Selector>
                        <Sequence>
                            <Cnd_HasTimePassed m_TimePoint="#last_time_in_uv_light" m_TimeDelta="0.1" m_Invert="true"/>
                            <Cnd_HasBBValue m_Key="#target" m_Invert="true"/>
                            <Opr_SetBBValue_vec3 m_Key="#run_pos" m_Value="#last_target_pos"/>
                        </Sequence>
                        <DelayerTimeDelta m_DelayTime="0.1">
                            <Sequence>
                                <Cnd_HasTimePassed m_TimePoint="#last_time_in_uv_light" m_TimeDelta="0.1" m_Invert="true"/>
                                <Cnd_IsPlayerTargetInUVLight m_Target="#target"/>
                                <Opr_SetBBValue_vec3 m_Key="#run_pos" m_Value="#target_pos"/>
                            </Sequence>
                        </DelayerTimeDelta>
                    </Selector>
                    <Act_Move m_Destination="#run_pos" m_MoveStyle="Run" m_StopAtDest="true" m_MoveAwayFromEndPosition="true" m_AvoidRegionsPreset="$avoid_regions_preset" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
                    <Opr_SetBBValue_bool m_Key="#should_check_last_target_pos" m_Value="false"/>
                    <Opr_SetBBValue_bool m_Key="#should_search" m_Value="false"/>
                </SequenceMem>
            </SetFlagOnRunning>
            <!-- Turn to light source - later on we might add directional reactions -->
            <SequenceMem>
                <Cnd_IsInUVLight/>
                <Cnd_CanInterruptActivityModule_Dodge/>
                <Cnd_IsInUVLightOfType m_Type="FLASHLIGHT"/>
                <Cnd_PositionInAngle m_Position="#uv_light_pos" m_Angle="120.0" m_Invert="true"/>
                <Act_TurnToPos m_Position="#uv_light_pos" m_Type="Combat" m_StartPolicy="DISCARD" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
            </SequenceMem>
            <!-- Strafe near spotlight area -->
            <Sequence>
                <Cnd_IsInUVLight m_Invert="true"/>
                <Cnd_HasBBValue m_Key="#target"/>
                <Cnd_HasTimePassed m_TimePoint="#last_time_in_uv_light" m_TimeDelta="0.1" m_Invert="true"/>
                <Cnd_IsPlayerTargetInUVLight m_Target="#target"/>
                <Parallel m_PolicySuccess="REQUIRE_ONE" m_PolicyFailure="REQUIRE_ONE">
                    <Act_Track m_Target="#target" m_Look="true" m_Aim="false"/>
                    <RunUntilFailure>
                        <Selector>
                            <CooldownTimeDelta m_CooldownTime="1.0">
                                <ExternalTree m_UID="VIRAL_ATTACK_QUICK" m_CustomName="VIRAL_ATTACK_QUICK"/>
                            </CooldownTimeDelta>
                            <SelectorMem>
                                <CooldownTimeDelta m_CooldownTime="1.0">
                                    <Act_Taunt m_Type="Normal" m_Target="#target"  m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="ON_END"/>
                                </CooldownTimeDelta>
                                <SequenceMem>
                                    <Selector>
                                        <Sequence>
                                            <Cnd_Random m_Value="0.50"/>
                                            <Cnd_SpaceInSimpleDirection m_Direction="RIGHT" m_MinRequiredSpace="2.0"/>
                                            <Opr_SetBBValue_EStepDirection m_Key="#combat_strafe_dir" m_Value="RIGHT"/>
                                        </Sequence>
                                        <Sequence>
                                            <Cnd_SpaceInSimpleDirection m_Direction="LEFT"  m_MinRequiredSpace="2.0"/>
                                            <Opr_SetBBValue_EStepDirection m_Key="#combat_strafe_dir" m_Value="LEFT"/>
                                        </Sequence>
                                    </Selector>
                                    <Opr_SetDirCorrectionSpeed m_MaxSpeed="0"/>
                                    <Opr_SetBBValue_vec3 m_Key="#strafe_pos" m_Value="#target_pos"/>
                                    <Act_Step m_Type="COMBAT" m_Style="CAUTIOUS" m_Direction="#combat_strafe_dir" m_TargetPos="#strafe_pos" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="WHEN_POSSIBLE"/>
                                    <Opr_RemoveBBValue m_Key="#combat_strafe_dir"/>
                                </SequenceMem>
                                <Act_Taunt m_Type="Normal" m_Target="#target"  m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="ON_END"/>
                            </SelectorMem>
                        </Selector>
                    </RunUntilFailure>
                </Parallel>
            </Sequence>
        </Selector>
    </SequenceMem>
</BehaviorTree>
