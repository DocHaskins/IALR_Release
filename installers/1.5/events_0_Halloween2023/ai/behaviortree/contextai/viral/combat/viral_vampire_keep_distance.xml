<?xml version="1.0" encoding="UTF-8"?>
<BehaviorTree xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../MetaData/schema_ai.xsd" m_ContextType="ai">
    <Selector>
        <SequenceMem>
            <Cnd_IsCombatTargetInRadius m_Radius="6.0"/>
            <Cnd_IsCombatTargetInAngle m_Angle="120" m_Invert="true"/>
            <Cnd_IsActivityModuleRunning_Movement m_Invert="true"/>
            <Act_TurnToPos m_Position="#target_pos" m_Type="Combat" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
        </SequenceMem>
        <!-- Taunt when can't reach target -->
        <SequenceMem>
            <Cnd_HasPathToCombatTarget m_Invert="true"/>
            <Cnd_IsCombatTargetInRadius m_Radius="8"/>
            <Selector>
                <Cnd_IsCombatTargetInAngle m_Angle="120"/>
                <Act_TurnToPos m_Position="#target_pos" m_Type="Combat" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
            </Selector>
            <Opr_SetDirCorrectionSpeed m_MaxSpeed="$dodge_dir_correction_speed"/>
            <Act_Taunt m_Type="Normal" m_Target="#target" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="WHEN_POSSIBLE"/>
        </SequenceMem>
        <!-- Taunt while waiting for attack to come off cooldown -->
        <CooldownTimeDelta m_CooldownTime="4.50">
            <SequenceMem>
                <Cnd_HasTimePassed m_TimePoint="#attack_cooldown" m_TimeDelta="0.1" m_Invert="true"/>
                <Cnd_IsBBValueEqual_string m_Key="#tactic" m_Value="rush" m_Invert="true"/>
                <Cnd_IsCombatTargetInAngle m_Angle="30"/>
                <Opr_SetDirCorrectionSpeed m_MaxSpeed="$dodge_dir_correction_speed"/>
                <Act_Taunt m_Type="BeforeJump" m_Target="#target" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="WHEN_POSSIBLE"/>
            </SequenceMem>
        </CooldownTimeDelta>
        <!-- Melee keep distance -->
        <SequenceMem>
            <Cnd_IsCombatTargetInSyncAction m_SyncAction="BiterGrab" m_Invert="true"/>
            <Cnd_IsBBValueEqual_string m_Key="#tactic" m_Value="cautious" m_Invert="true"/>
            <Cnd_IsCombatTargetInRadius m_Radius="$melee_distance_max" m_Invert="true"/>
            <Sequence>
                <Cnd_IsCombatTargetInRadius m_Radius="8.0" m_Invert="true"/>
                <Act_Move m_Destination="#target_pos" m_IsAvoidanceActive="$use_avoidance" m_FailIfDestUnreachable="true" m_MaxDistOutsideNavmeshXZ="2" m_MaxDistOutsideNavmeshY="2" m_MoveStyle="#run_move_style" m_AvoidRegionsPreset="$avoid_regions_preset" m_StopAtDest="false" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
            </Sequence>
        </SequenceMem>
        <Sequence>
            <Cnd_IsBBValueEqual_string m_Key="#tactic" m_Value="cautious"/>
            <Cnd_IsCombatTargetInRadius m_Radius="6.0" m_Invert="true"/>
            <Act_Move m_Destination="#target_pos" m_IsAvoidanceActive="$use_avoidance" m_FailIfDestUnreachable="true" m_MaxDistOutsideNavmeshXZ="2" m_MaxDistOutsideNavmeshY="2" m_MoveStyle="#run_move_style" m_AvoidRegionsPreset="$avoid_regions_preset" m_StopAtDest="false" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
        </Sequence>
        <!-- Strafing -->
        <Optional m_Enabled="$strafe_enabled">
            <SequenceMem>
                <Selector>
                    <Cnd_IsBBValueEqual_string m_Key="#tactic" m_Value="cautious"/>
                    <Sequence>
                        <Cnd_IsCombatTargetInSyncAction m_SyncAction="BiterGrab"/>
                        <Cnd_IsCombatTargetInRadius m_Radius="8.0"/>
                    </Sequence>
                    <Cnd_HasTimePassed m_TimePoint="#attack_cooldown" m_TimeDelta="0.2" m_Invert="true"/>
                </Selector>
                <Selector>
                    <Optional m_Enabled="$try_to_flank_when_strafing">
                        <Selector>
                            <Sequence>
                                <Cnd_OnLeftOfTarget m_Target="#target"/>
                                <Cnd_SpaceInSimpleDirection m_Direction="RIGHT" m_MinRequiredSpace="2"/>
                                <Opr_SetBBValue_EStepDirection m_Key="#combat_strafe_dir" m_Value="RIGHT"/>
                            </Sequence>
                            <Sequence>
                                <Cnd_OnLeftOfTarget m_Target="#target" m_Invert="true"/>
                                <Cnd_SpaceInSimpleDirection m_Direction="LEFT" m_MinRequiredSpace="2"/>
                                <Opr_SetBBValue_EStepDirection m_Key="#combat_strafe_dir" m_Value="LEFT"/>
                            </Sequence>
                        </Selector>
                    </Optional>
                    <Selector>
                        <Sequence>
                            <Cnd_Random m_Value="0.50"/>
                            <Cnd_SpaceInSimpleDirection m_Direction="RIGHT" m_MinRequiredSpace="2"/>
                            <Opr_SetBBValue_EStepDirection m_Key="#combat_strafe_dir" m_Value="RIGHT"/>
                        </Sequence>
                        <Sequence>
                            <Cnd_SpaceInSimpleDirection m_Direction="LEFT" m_MinRequiredSpace="2"/>
                            <Opr_SetBBValue_EStepDirection m_Key="#combat_strafe_dir" m_Value="LEFT"/>
                        </Sequence>
                    </Selector>
                </Selector>
                <Opr_SetDirCorrectionSpeed m_MaxSpeed="400"/>
                <SetAnimatorSpeed m_Speed="$strafe_anim_speed">
                    <Act_Step m_Type="COMBAT" m_Style="CAUTIOUS" m_Direction="#combat_strafe_dir" m_Target="#target" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="ON_END"/>
                </SetAnimatorSpeed>
            </SequenceMem>
        </Optional>
        <CooldownTimeDelta m_CooldownTime="1.0">
            <Act_Taunt m_Type="Normal" m_Target="#target" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="WHEN_POSSIBLE"/>
        </CooldownTimeDelta>
        <Act_Idle m_Type="Stand" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
    </Selector>
</BehaviorTree>
